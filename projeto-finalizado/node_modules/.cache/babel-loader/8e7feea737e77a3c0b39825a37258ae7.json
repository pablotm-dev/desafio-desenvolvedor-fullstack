{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pablo\\\\Desktop\\\\projeto-finalizado\\\\src\\\\componentes\\\\Form\\\\index.js\";\nimport react, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/*#__PURE__*/\n_jsxDEV(\"script\", {\n  src: \"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 2,\n  columnNumber: 1\n}, this);\n\nclass PostForm extends Component {\n  async postData(nome, email, telefone, senha, quantidade, tempo) {\n    if (nome !== '' && email !== '' && telefone !== '' && senha !== '' && quantidade !== '' && tempo !== '') {\n      try {\n        const response = await fetch('http://localhost:5000/simulacao', {\n          method: 'post',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            nome: nome,\n            email: email,\n            telefone: telefone,\n            senha_acesso: senha,\n            quantidade: quantidade,\n            tempo_investimento: tempo\n          })\n        }).then(response => response.json());\n        return response;\n      } catch (e) {\n        console.log(e);\n      }\n    } else {\n      alert(\"preencha todos os campos\");\n    }\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.submitHandler = async e => {\n      e.preventDefault();\n      console.log(this.state);\n      const response = await this.postData(this.state.nome, this.state.email, this.state.telefone, this.state.senha, this.state.quantidade, this.state.tempo);\n      this.setState({\n        json_response: response\n      });\n      console.log(response);\n    };\n\n    this.state = {\n      nome: '',\n      telefone: '',\n      email: '',\n      senha: '',\n      quantidade: '',\n      tempo: ''\n    };\n  }\n\n  render() {\n    const {\n      nome,\n      telefone,\n      email,\n      senha,\n      quantidade,\n      tempo\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"nome\",\n            value: nome,\n            onChange: this.changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"telefone\",\n            value: telefone,\n            onChange: this.changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            value: email,\n            onChange: this.changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"senha\",\n            value: senha,\n            onChange: this.changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"quantidade\",\n            value: quantidade,\n            onChange: this.changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"tempo\",\n            value: tempo,\n            onChange: this.changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-md-12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"op1\",\n            children: /*#__PURE__*/_jsxDEV(\"object\", {\n              type: \"text/html\",\n              data: \"graph.html\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            id: \"line-chart\",\n            width: \"800\",\n            height: \"450\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nnew Chart(document.getElementById(\"line-chart\"), {\n  type: 'line',\n  data: {\n    labels: [1500, 1600, 1700, 1750, 1800, 1850, 1900, 1950, 1999, 2050],\n    datasets: [{\n      data: [86, 114, 106, 106, 107, 111, 133, 221, 783, 2478],\n      label: \"Africa\",\n      borderColor: \"#3e95cd\",\n      fill: false\n    }, {\n      data: [282, 350, 411, 502, 635, 809, 947, 1402, 3700, 5267],\n      label: \"Asia\",\n      borderColor: \"#8e5ea2\",\n      fill: false\n    }, {\n      data: [168, 170, 178, 190, 203, 276, 408, 547, 675, 734],\n      label: \"Europe\",\n      borderColor: \"#3cba9f\",\n      fill: false\n    }, {\n      data: [40, 20, 10, 16, 24, 38, 74, 167, 508, 784],\n      label: \"Latin America\",\n      borderColor: \"#e8c3b9\",\n      fill: false\n    }, {\n      data: [6, 3, 2, 2, 7, 26, 82, 172, 312, 433],\n      label: \"North America\",\n      borderColor: \"#c45850\",\n      fill: false\n    }]\n  },\n  options: {\n    title: {\n      display: true,\n      text: 'World population per region (in millions)'\n    }\n  }\n});\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/Pablo/Desktop/projeto-finalizado/src/componentes/Form/index.js"],"names":["react","Component","PostForm","postData","nome","email","telefone","senha","quantidade","tempo","response","fetch","method","headers","body","JSON","stringify","senha_acesso","tempo_investimento","then","json","e","console","log","alert","constructor","props","changeHandler","setState","target","name","value","submitHandler","preventDefault","state","json_response","render","Chart","document","getElementById","type","data","labels","datasets","label","borderColor","fill","options","title","display","text"],"mappings":"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","sourcesContent":["import react, { Component } from 'react'\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js\"></script>\r\n\r\nclass PostForm extends Component{\r\n    async postData(nome, email, telefone, senha, quantidade, tempo){\r\n        if (nome !== '' && email !== '' && telefone !== '' && senha !== '' && quantidade !== '' && tempo !== ''){\r\n            try{\r\n            const response = await fetch('http://localhost:5000/simulacao', {\r\n                method: 'post',\r\n                headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                nome: nome,\r\n                email: email,\r\n                telefone: telefone,\r\n                senha_acesso: senha,\r\n                quantidade: quantidade,\r\n                tempo_investimento: tempo\r\n                })\r\n            }).then(response => response.json());\r\n            return (response)\r\n            }catch(e){\r\n            console.log(e)\r\n            }\r\n        }\r\n        else{\r\n            alert(\"preencha todos os campos\")\r\n        }\r\n      }\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            nome: '',\r\n            telefone: '',\r\n            email: '',\r\n            senha: '',\r\n            quantidade: '',\r\n            tempo: ''\r\n        }\r\n    }\r\n\r\n    changeHandler = e => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    submitHandler = async e => {\r\n        e.preventDefault()\r\n        console.log(this.state)\r\n        const response = await this.postData(this.state.nome, this.state.email, this.state.telefone, this.state.senha, this.state.quantidade, this.state.tempo)\r\n        this.setState({json_response: response})\r\n        console.log(response)\r\n    }\r\n\r\n    render(){\r\n        const {nome, telefone, email, senha, quantidade, tempo} = this.state\r\n        return(\r\n            <div>\r\n                <form onSubmit={this.submitHandler}>\r\n                    <div>\r\n                        <input type='text' name='nome' value={nome} onChange={this.changeHandler}/>\r\n                    </div>\r\n                    <div>\r\n                        <input type='text' name='telefone' value={telefone} onChange={this.changeHandler}/>\r\n                    </div>\r\n                    <div>\r\n                        <input type='text' name='email' value={email} onChange={this.changeHandler}/>\r\n                    </div>\r\n                    <div>\r\n                        <input type='text' name='senha' value={senha} onChange={this.changeHandler}/>\r\n                    </div>\r\n                    <div>\r\n                        <input type='text' name='quantidade' value={quantidade} onChange={this.changeHandler}/>\r\n                    </div>\r\n                    <div>\r\n                        <input type='text' name='tempo' value={tempo} onChange={this.changeHandler}/>\r\n                    </div>\r\n                    <button type='submit'>Submit</button>\r\n                    <div class=\"container\">\r\n                        <div class=\"col-md-12\"></div>\r\n                        <div class=\"op1\"><object type=\"text/html\" data=\"graph.html\"></object></div>\r\n                        <canvas id=\"line-chart\" width=\"800\" height=\"450\"></canvas>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nnew Chart(document.getElementById(\"line-chart\"), {\r\n    type: 'line',\r\n    data: {\r\n      labels: [1500,1600,1700,1750,1800,1850,1900,1950,1999,2050],\r\n      datasets: [{ \r\n          data: [86,114,106,106,107,111,133,221,783,2478],\r\n          label: \"Africa\",\r\n          borderColor: \"#3e95cd\",\r\n          fill: false\r\n        }, { \r\n          data: [282,350,411,502,635,809,947,1402,3700,5267],\r\n          label: \"Asia\",\r\n          borderColor: \"#8e5ea2\",\r\n          fill: false\r\n        }, { \r\n          data: [168,170,178,190,203,276,408,547,675,734],\r\n          label: \"Europe\",\r\n          borderColor: \"#3cba9f\",\r\n          fill: false\r\n        }, { \r\n          data: [40,20,10,16,24,38,74,167,508,784],\r\n          label: \"Latin America\",\r\n          borderColor: \"#e8c3b9\",\r\n          fill: false\r\n        }, { \r\n          data: [6,3,2,2,7,26,82,172,312,433],\r\n          label: \"North America\",\r\n          borderColor: \"#c45850\",\r\n          fill: false\r\n        }\r\n      ]\r\n    },\r\n    options: {\r\n      title: {\r\n        display: true,\r\n        text: 'World population per region (in millions)'\r\n      }\r\n    }\r\n  });\r\n\r\nexport default PostForm"]},"metadata":{},"sourceType":"module"}