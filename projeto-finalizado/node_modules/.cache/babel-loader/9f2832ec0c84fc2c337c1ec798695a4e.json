{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pablo\\\\Desktop\\\\projeto-finalizado\\\\src\\\\componentes\\\\Form\\\\index.js\";\nimport react, { Component } from 'react';\nimport Graph from '../../componentes/graph';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PostForm extends Component {\n  async postData(nome, email, telefone, senha, quantidade, tempo) {\n    if (nome !== '' && email !== '' && telefone !== '' && senha !== '' && quantidade !== '' && tempo !== '') {\n      try {\n        const response = await fetch('http://localhost:5000/simulacao', {\n          method: 'post',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            nome: nome,\n            email: email,\n            telefone: telefone,\n            senha_acesso: senha,\n            quantidade: quantidade,\n            tempo_investimento: tempo\n          })\n        }).then(response => response.json());\n        return response;\n      } catch (e) {\n        console.log(e);\n      }\n    } else {\n      alert(\"preencha todos os campos\");\n    }\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.submitHandler = async e => {\n      e.preventDefault();\n      console.log(this.state);\n      const response = await this.postData(this.state.nome, this.state.email, this.state.telefone, this.state.senha, this.state.quantidade, this.state.tempo);\n      this.setState({\n        json_response: response\n      });\n      console.log(response);\n      console.log(this.state.json_response.valores_poupanca);\n      var ultimo_poup = this.state.json_response.valores_poupanca.slice(-1)[0];\n      var ultimo_cdb = this.state.json_response.valores_cdb.slice(-1)[0];\n      this.setState({\n        rendimento_poup: ultimo_poup - this.state.quantidade\n      });\n      this.setState({\n        rendimento_cdb: ultimo_cdb - this.state.quantidade\n      });\n      console.log(\"redimento: \" + (ultimo - this.state.quantidade));\n    };\n\n    this.state = {\n      nome: '',\n      telefone: '',\n      email: '',\n      senha: '',\n      quantidade: '',\n      tempo: '',\n      json_response: '',\n      rendimento_poup: '',\n      rendimento_cdb: ''\n    };\n  }\n\n  render() {\n    const {\n      nome,\n      telefone,\n      email,\n      senha,\n      quantidade,\n      tempo\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"nome\",\n            value: nome,\n            onChange: this.changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"telefone\",\n            value: telefone,\n            onChange: this.changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            value: email,\n            onChange: this.changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"senha\",\n            value: senha,\n            onChange: this.changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"quantidade\",\n            value: quantidade,\n            onChange: this.changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"tempo\",\n            value: tempo,\n            onChange: this.changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"t1\",\n            class: \"op2\",\n            children: /*#__PURE__*/_jsxDEV(Graph, {\n              json: this.state.json_response\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"titulo-sessao\",\n            children: [\"Investindo na poupan\\xE7a voce teria um rendimento de:\", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"agora mesmo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 106\n            }, this), \" sua simula\\xE7\\xE3o\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/Pablo/Desktop/projeto-finalizado/src/componentes/Form/index.js"],"names":["react","Component","Graph","PostForm","postData","nome","email","telefone","senha","quantidade","tempo","response","fetch","method","headers","body","JSON","stringify","senha_acesso","tempo_investimento","then","json","e","console","log","alert","constructor","props","changeHandler","setState","target","name","value","submitHandler","preventDefault","state","json_response","valores_poupanca","ultimo_poup","slice","ultimo_cdb","valores_cdb","rendimento_poup","rendimento_cdb","ultimo","render"],"mappings":"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","sourcesContent":["import react, { Component } from 'react'\r\nimport Graph from '../../componentes/graph';\r\n\r\nclass PostForm extends Component{\r\n    async postData(nome, email, telefone, senha, quantidade, tempo){\r\n        if (nome !== '' && email !== '' && telefone !== '' && senha !== '' && quantidade !== '' && tempo !== ''){\r\n            try{\r\n            const response = await fetch('http://localhost:5000/simulacao', {\r\n                method: 'post',\r\n                headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                nome: nome,\r\n                email: email,\r\n                telefone: telefone,\r\n                senha_acesso: senha,\r\n                quantidade: quantidade,\r\n                tempo_investimento: tempo\r\n                })\r\n            }).then(response => response.json());\r\n            return (response)\r\n            }catch(e){\r\n            console.log(e)\r\n            }\r\n        }\r\n        else{\r\n            alert(\"preencha todos os campos\")\r\n        }\r\n      }\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            nome: '',\r\n            telefone: '',\r\n            email: '',\r\n            senha: '',\r\n            quantidade: '',\r\n            tempo: '',\r\n            json_response: '',\r\n            rendimento_poup: '',\r\n            rendimento_cdb: ''\r\n        }\r\n    }\r\n\r\n    changeHandler = e => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    submitHandler = async e => {\r\n        e.preventDefault()\r\n        console.log(this.state)\r\n        const response = await this.postData(this.state.nome, this.state.email, this.state.telefone, this.state.senha, this.state.quantidade, this.state.tempo)\r\n        this.setState({json_response: response})\r\n        console.log(response)\r\n        console.log(this.state.json_response.valores_poupanca)\r\n        var ultimo_poup = this.state.json_response.valores_poupanca.slice(-1)[0]\r\n        var ultimo_cdb = this.state.json_response.valores_cdb.slice(-1)[0]\r\n        this.setState({rendimento_poup: (ultimo_poup - this.state.quantidade)})\r\n        this.setState({rendimento_cdb: (ultimo_cdb - this.state.quantidade)})\r\n        console.log(\"redimento: \" + (ultimo - this.state.quantidade))\r\n    }\r\n\r\n    render(){\r\n        const {nome, telefone, email, senha, quantidade, tempo} = this.state\r\n        return(\r\n            <div>\r\n                <form onSubmit={this.submitHandler}>\r\n                    <div>\r\n                        <input type='text' name='nome' value={nome} onChange={this.changeHandler}/>\r\n                    </div>\r\n                    <div>\r\n                        <input type='text' name='telefone' value={telefone} onChange={this.changeHandler}/>\r\n                    </div>\r\n                    <div>\r\n                        <input type='text' name='email' value={email} onChange={this.changeHandler}/>\r\n                    </div>\r\n                    <div>\r\n                        <input type='text' name='senha' value={senha} onChange={this.changeHandler}/>\r\n                    </div>\r\n                    <div>\r\n                        <input type='text' name='quantidade' value={quantidade} onChange={this.changeHandler}/>\r\n                    </div>\r\n                    <div>\r\n                        <input type='text' name='tempo' value={tempo} onChange={this.changeHandler}/>\r\n                    </div>\r\n                    <button type='submit'>Submit</button>\r\n                    <div class=\"container\">\r\n                        <div id='t1' class=\"op2\"><Graph json={this.state.json_response}/></div>\r\n                        <h2 className=\"titulo-sessao\">Investindo na poupança voce teria um rendimento de:<b>agora mesmo</b> sua simulação</h2>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default PostForm"]},"metadata":{},"sourceType":"module"}